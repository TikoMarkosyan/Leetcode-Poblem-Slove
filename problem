198. House Robber
/**
 * @param {number[]} nums
 * @return {number}
 */
var rob = function(nums) {
    if(nums.length  === 1) {
        return nums[0]
    }
    let coin = [nums[0],  Math.max(nums[0], nums[1])];
    for(let i = 2; i < nums.length; i++) {
     coin[i] = Math.max(coin[i-2]+nums[i], coin[i-1]);
    }
    return coin[coin.length-1];
};


70. Climbing Stairs

var climbStairs = function(n) {
    if(n<=3) return n
    const dp = [0, 1, 2];
    for(let i = 3; i<=n+1; i++) {
        dp[i] = dp[i-1] + dp[i-2]
    }

    return dp[n]
};


746. Min Cost Climbing Stairs

/**
 * @param {number[]} cost
 * @return {number}
 */
var minCostClimbingStairs = function(cost) {
    const dp = [cost[0], cost[1]];
    for(let i = 2; i<cost.length; i++) {
      dp[i] = Math.min(dp[i-1], dp[i-2]) + cost[i];
    }
    return  Math.min(dp[dp.length-1], dp[dp.length-2]);
};



53. Maximum Subarray
/**
 * @param {number[]} nums
 * @return {number}
 */
var maxSubArray = function(nums) {
    if(nums.length === 1) {
        return nums[0]
    }

    let dp = [];
    dp[0] = nums[0];

    for(let i = 1; i<nums.length; i++) {
        dp[i] =  nums[i] + Math.max(0, dp[i-1]);
    }

    return Math.max(...dp);
};


3. Longest Substring Without Repeating Characters
/**
 * @param {string} s
 * @return {number}
 */
var lengthOfLongestSubstring = function(s) {
    let res = 0, l = 0;
    const set = new Set();
    for(let r = 0; r < s.length; r++) {
        while(set.has(s[r])) {
            set.delete(s[l]);
            l++;
        }
        set.add(s[r]);
        res = Math.max(res, r - l + 1);
    }
    return res;
};


7. Reverse Integer

/**
 * @param {number} x
 * @return {number}
 */
var reverse = function (x) {
    const INT_MIN = -Math.pow(2, 31);
    const INT_MAX = Math.pow(2, 31) - 1;

    const res = x.toString().split("").reverse();
    if (res.includes("-")) {
        const last = res.pop();
        res.unshift(last);
    }

    const result = +res.join("");
    if (result < INT_MIN || result > INT_MAX) {
        return 0;
    }

    return result;
};

